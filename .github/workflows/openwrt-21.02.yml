#
# Description: Build OpenWrt using GitHub Actions
#

name: OpenWrt 21.02

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 8 * * 5

env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x
  REPO_BRANCH: openwrt-21.02
  FILES: arm_64_21.02/files
  FEEDS_CONF: arm_64_21.02/feeds.conf.default.bak
  CONFIG_FILE: arm_64_21.02/.config.u
  DIY_P1_SH: arm_64_21.02/diy-part1.sh
  DIY_P2_SH: arm_64_21.02/diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Install packages
      run: |
        echo "Install packages"
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Cache openwrt SDK
      id: cache-sdk
      uses: actions/cache@v3
      with:
        path: sdk
        key: openwrt-sdk-21.02.7-x86-64

    - name: Initialization environment
      if: steps.cache-sdk.outputs.cache-hit != 'true'
      env:
        url_sdk: https://downloads.openwrt.org/releases/21.02.7/targets/x86/64/openwrt-sdk-21.02.7-x86-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
      run: |
        wget ${{ env.url_sdk }}
        file_name=$(echo ${{env.url_sdk}} | awk -F/ '{print $NF}')
        mkdir sdk && tar -xJf $file_name -C ./sdk --strip-components=1
        cd sdk
        echo "src-git base https://github.com/openwrt/openwrt.git;openwrt-21.02" > feeds.conf
        echo "src-git packages https://github.com/openwrt/packages.git;openwrt-21.02" >> feeds.conf
        echo "src-git luci https://github.com/openwrt/luci.git;openwrt-21.02" >> feeds.conf
        echo "src-git routing https://git.openwrt.org/feed/routing.git;openwrt-21.02"  >> feeds.conf
        cd ..
        chmod +x $DIY_P1_SH
        cd sdk
        $GITHUB_WORKSPACE/$DIY_P1_SH
        ./scripts/feeds update -a
        ./scripts/feeds install -d n luci-app-adguardhome
        cd ..
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE sdk/.config
        chmod +x $DIY_P2_SH
        cd sdk
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: upload .config to WETRANSFER for test
      #if: github.event.client_payload.test == 'true'
      run: |
        cd sdk
        make defconfig
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress .config 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"
    
    - name: Download package
      id: package
      run: |
        cd sdk
        make defconfig
        make download -j8

    - name: Compile the firmware
      id: compile
      run: |
        cd sdk
        echo -e "$(nproc) thread compile"
        make package/luci-app-adguardhome/compile -j$(nproc) || make package/luci-app-adguardhome/compile -j1 || make package/luci-app-adguardhome/compile -j1 V=s

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: s
        path: sdk/bin/packages/*

    - name: Remove old Artifacts
      uses: c-hive/gha-remove-artifacts@v1.2.0
      with:
        age: '1 day'
        skip-recent: 3
      
    - name: 删除旧的 workflow 运行记录
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 30  
