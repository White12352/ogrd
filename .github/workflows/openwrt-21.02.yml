#
# Description: Build OpenWrt using GitHub Actions
#

name: OpenWrt 21.02

on:
  #repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 8 * * 5

env:
  FILES: arm_64_21.02/files
  FEEDS_CONF: arm_64_21.02/feeds.conf.default.bak
  CONFIG_FILE: arm_64_21.02/.config.u
  DIY_P1_SH: arm_64_21.02/diy-part1.sh
  DIY_P2_SH: arm_64_21.02/diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  Build:
    permissions: write-all
    runs-on: ubuntu-20.04
    name: build (${{ matrix.platform }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: x86_64
            url_sdk: https://downloads.openwrt.org/releases/18.06.9/targets/x86/64/openwrt-sdk-18.06.9-x86-64_gcc-7.3.0_musl.Linux-x86_64.tar.xz

          #- platform: aarch64_generic
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/rockchip/armv8/openwrt-sdk-23.05.0-rc3-rockchip-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          #- platform: aarch64_cortex-a53
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/mvebu/cortexa53/openwrt-sdk-23.05.0-rc3-mvebu-cortexa53_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: aarch64_cortex-a53
            url_sdk: https://downloads.openwrt.org/releases/18.06.9/targets/mvebu/cortexa53/openwrt-sdk-18.06.9-mvebu-cortexa53_gcc-7.3.0_musl.Linux-x86_64.tar.xz
          
          - platform: aarch64_cortex-a72
            url_sdk: https://downloads.openwrt.org/releases/18.06.9/targets/mvebu/cortexa72/openwrt-sdk-18.06.9-mvebu-cortexa72_gcc-7.3.0_musl.Linux-x86_64.tar.xz

          #- platform: arm_cortex-a7
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/mediatek/mt7629/openwrt-sdk-23.05.0-rc3-mediatek-mt7629_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          #- platform: arm_cortex-a7_neon-vfpv4
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/sunxi/cortexa7/openwrt-sdk-23.05.0-rc3-sunxi-cortexa7_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          #- platform: arm_cortex-a8_vfpv3
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/sunxi/cortexa8/openwrt-sdk-23.05.0-rc3-sunxi-cortexa8_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          #- platform: arm_cortex-a9
            #url_sdk: https://downloads.openwrt.org/releases/18.06.9/targets/mvebu/cortexa9/openwrt-sdk-18.06.9-mvebu-cortexa9_gcc-7.3.0_musl_eabi.Linux-x86_64.tar.xz

          #- platform: arm_cortex-a9_neon
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/zynq/generic/openwrt-sdk-23.05.0-rc3-zynq-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          #- platform: arm_cortex-a9_vfpv3-d16
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/mvebu/cortexa9/openwrt-sdk-23.05.0-rc3-mvebu-cortexa9_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          #- platform: arm_cortex-a15_neon-vfpv4
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/ipq806x/generic/openwrt-sdk-23.05.0-rc3-ipq806x-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          #- platform: mips_24kc
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/ath79/generic/openwrt-sdk-23.05.0-rc3-ath79-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          #- platform: mips_4kec
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/realtek/rtl838x/openwrt-sdk-23.05.0-rc3-realtek-rtl838x_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          #- platform: mips_mips32
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/bcm63xx/generic/openwrt-sdk-23.05.0-rc3-bcm63xx-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: mipsel_24kc
            url_sdk: https://downloads.openwrt.org/releases/18.06.9/targets/ramips/mt7621/openwrt-sdk-18.06.9-ramips-mt7621_gcc-7.3.0_musl.Linux-x86_64.tar.xz

          #- platform: mipsel_74kc
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/ramips/rt3883/openwrt-sdk-23.05.0-rc3-ramips-rt3883_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          #- platform: mipsel_mips32
            #url_sdk: https://downloads.openwrt.org/releases/23.05.0-rc3/targets/bcm47xx/generic/openwrt-sdk-23.05.0-rc3-bcm47xx-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz

    steps:
      - name: Checkout
        uses: actions/checkout@main
      
      - name: Initialization ${{ matrix.platform }} compile environment
        run: |
          echo "install packages!!!!!!"
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL https://github.com/smallprogram/OpenWrtAction/raw/main/diy_script/official_dependence)
          #sudo -E apt-get -yqq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang clangd cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev libssl-dev libtool lld lldb lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply python-docutils qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
      
      - name: ${{ matrix.platform }} sdk download
        #if: matrix.platform != 'aarch64_cortex-a53_filogic'
        run: |
          wget ${{ matrix.url_sdk }}
          file_name=$(echo ${{matrix.url_sdk}} | awk -F/ '{print $NF}')
          mkdir $GITHUB_WORKSPACE/sdk && tar -xJf $file_name -C $GITHUB_WORKSPACE/sdk --strip-components=1
          cd $GITHUB_WORKSPACE/sdk
          echo "src-git base https://github.com/openwrt/openwrt.git;openwrt-18.06" > feeds.conf
          echo "src-git packages https://github.com/openwrt/packages.git;openwrt-18.06" >> feeds.conf
          echo "src-git luci https://github.com/openwrt/luci.git;openwrt-18.06" >> feeds.conf
          echo "src-git routing https://git.openwrt.org/feed/routing.git;openwrt-18.06"  >> feeds.conf
          cd ..
          chmod +x $GITHUB_WORKSPACE/$DIY_P1_SH
          cd sdk
          $GITHUB_WORKSPACE/$DIY_P1_SH
          ./scripts/feeds update -a
          ./scripts/feeds install -d n luci-app-adguardhome
          ./scripts/feeds install -d n adguardhome
          ./scripts/feeds install -d n luci-app-smartdns
          ./scripts/feeds install -d n smartdns
          ./scripts/feeds install -d n luci-app-unblockneteasemusic
          cd ..
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE sdk/.config
          chmod +x $GITHUB_WORKSPACE/$DIY_P2_SH
          cd sdk
          $GITHUB_WORKSPACE/$DIY_P2_SH

      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: upload .config to WETRANSFER for test
        #if: github.event.client_payload.test == 'true'
        run: |
          cd sdk
          make defconfig
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress .config 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
          echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"
    
      - name: Download package
        id: package
        run: |
          cd sdk
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;

      - name: Compile the firmware
        id: compile
        run: |
          cd sdk
          echo -e "$(nproc) thread compile"
          #make package/luci-app-adguardhome/{clean,compile} j1 V=s
          #make feeds/packages/net/adguardhome/{clean,compile} j1 V=s
          make package/luci-app-adguardhome/{clean,compile} -j$(nproc)
          #make package/adguardhome/{clean,compile} -j$(nproc)
          make package/luci-app-smartdns/{clean,compile} -j$(nproc)
          #make package/smartdns/{clean,compile} -j$(nproc)
          make package/luci-app-unblockneteasemusic/{clean,compile} -j$(nproc)
          
      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Upload bin directory
        uses: actions/upload-artifact@v3.1.3
        with:
          name: s
          path: sdk/bin/packages/*

      #- name: Remove old Artifacts
        #uses: c-hive/gha-remove-artifacts@v1.2.0
        #with:
          #age: '1 day'
          #skip-recent: 3
      
      #- name: 删除旧的 workflow 运行记录
        #uses: GitRML/delete-workflow-runs@main
        #with:
          #retain_days: 30
